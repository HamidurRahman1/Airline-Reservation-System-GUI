//    public void reservationWithUsernameAndPass(Integer flightIdPk)
    //    {
    //        Stage stage = new Stage();
    //        VBox vBox = new VBox();
    //
    //        Label l = new Label("Please enter your username to make reservation");
    //        TextField textField = new TextField();
    //        Button submit = button("Make Reservation");
    //
    //        vBox.getChildren().addAll(l, textField, submit);
    //
    //        Scene scene = new Scene(vBox, FieldValue.LOGIN_WINDOW_WIDTH, FieldValue.LOGIN_WINDOW_HEIGHT);
    //
    //        submit.setOnAction(e ->
    //        {
    //            String username = textField.getText();
    //            try
    //            {
    //                if(apiServiceImpl.makeReservation(flightIdPk, username, ""))
    //                {
    //                    apiServiceImpl.makeReservationBySE(flightIdPk, username, "");
    //                    stage.close();
    //                    AlertBox.DisplayConfirmation("Reservation Successful",
    //                            "successfully reserved a seat for user="+username+"." + " Please check your " +
    //                                    "account to verify.");
    //                    eventGlobalSearchBar();
    //                }
    //            }
    //            catch(InvalidUserNameException ex)
    //            {
    //                stage.close();
    //                AlertBox.DisplayError("Incorrect username", "No user found with username="+username);
    //            }
    //            catch(InvalidPasswordException ex)
    //            {
    //                stage.close();
    //            }
    //        });
    //        stage.setScene(scene);
    //        stage.setTitle(FieldValue.CUSTOMER);
    //        stage.setAlwaysOnTop(true);
    //        stage.showAndWait();
    //    }

//    private void addFlights(String airline)
//    {
//        Flight flight = new Flight();
//
//        List<Airport> airports = Tester.airports();
//        List<Airplane> airplanes = Tester.airPlanes();
//
//        Stage stage = new Stage();
//        stage.setWidth(900);
//        stage.setHeight(700);
//        stage.setTitle("Adding a flight for ".concat(airline));
//
//        GridPane gridPane = new GridPane();
//        gridPane.setAlignment(Pos.BASELINE_CENTER);
//        gridPane.setHgap(12);
//        gridPane.setVgap(8);
//
//        gridPane.add(new Label(), 0, 0);
//        gridPane.add(new Label(), 0, 1);
//
//        Label codeLabel = label("Enter a flight code/name: ");
//        codeLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label airplaneLabel = label("Select an airplane: ");
//        airplaneLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label sourceLabel = label("Select departure airport: ");
//        sourceLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label sourceDateLabel = label("Select departure date: ");
//        sourceDateLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label sourceTimeLabel = label("Select departure time: ");
//        sourceTimeLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label destinationLabel = label("Select arrival airport: ");
//        destinationLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label destinationDateLabel = label("Select arrival date: ");
//        destinationDateLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label destinationTimeLabel = label("Select arrival time: ");
//        destinationTimeLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        Label capacityLabel = label("Enter max capacity: ");
//        capacityLabel.setPadding(Utility.FLIGHT_LABEL());
//
//        TextField codeField = new TextField();
//
//        ChoiceBox<Airplane> airPlaneChoiceBox = new ChoiceBox<>(FXCollections.observableArrayList(airplanes));
//        airPlaneChoiceBox.getSelectionModel().selectedIndexProperty().addListener(new ChangeListener <Number>()
//        {
//            @Override
//            public void changed(ObservableValue <? extends Number> observableValue, Number number, Number t1)
//            {
//                System.out.println(airplanes.get(t1.intValue()));
//            }
//        });
//
//        ChoiceBox<Airport> sourceChoices = new ChoiceBox<>(FXCollections.observableArrayList(airports));
//        DatePicker sourceDate = new DatePicker();
//        sourceDate.setDayCellFactory(picker -> new DateCell()
//        {
//            public void updateItem(LocalDate date, boolean empty)
//            {
//                super.updateItem(date, empty);
//                LocalDate tomorrow = LocalDate.of(LocalDate.now().getYear(), LocalDate.now().getMonth(),
//                        LocalDate.now().getDayOfMonth()+1);
//                setDisable(empty || date.compareTo(tomorrow) < 0 );
//            }
//        });
//        sourceDate.setOnAction(e -> System.out.println(sourceDate.getValue().toString()));
//        ChoiceBox<String> sourceTimes = new ChoiceBox<>(FXCollections.observableArrayList(Utility.TIMES_LIST()));
//
//        ChoiceBox<Airport> destinationChoices = new ChoiceBox<>(FXCollections.observableArrayList(airports));
//        DatePicker destinationDate = new DatePicker();
//        destinationDate.setDayCellFactory(picker -> new DateCell()
//        {
//            public void updateItem(LocalDate date, boolean empty)
//            {
//                super.updateItem(date, empty);
//                LocalDate tomorrow = LocalDate.of(LocalDate.now().getYear(), LocalDate.now().getMonth(),
//                        LocalDate.now().getDayOfMonth()+2);
//                setDisable(empty || date.compareTo(tomorrow) < 0 );
//            }
//        });
//        destinationDate.setOnAction(e -> System.out.println(destinationDate.getValue().toString()));
//        ChoiceBox<String> destinationTimes = new ChoiceBox<>(FXCollections.observableArrayList(Utility.TIMES_LIST()));
//
//        TextField capacity1 = new TextField();
//
//        EventHandler event = new EventHandler<ActionEvent>()
//        {
//            @Override
//            public void handle(ActionEvent event)
//            {
//                Airport airport = sourceChoices.getValue();
//                List<Airport> newAirports = new LinkedList <>();
//
//                for(Airport airport1 : airports) if(!airport.equals(airport1)) newAirports.add(airport1);
//                destinationChoices.setItems(FXCollections.observableList(newAirports));
//            }
//        };
//
//        gridPane.add(codeLabel, 0, 2);
//        gridPane.add(codeField, 1, 2);
//
//        gridPane.add(airplaneLabel, 0, 3);
//        gridPane.add(airPlaneChoiceBox, 1, 3);
//
//        gridPane.add(sourceLabel, 0, 4);
//        gridPane.add(sourceChoices, 1, 4);
//        sourceChoices.setOnAction(event);
//
//        gridPane.add(sourceDateLabel, 0, 5);
//        gridPane.add(sourceDate, 1, 5);
//
//        gridPane.add(sourceTimeLabel, 0, 6);
//        gridPane.add(sourceTimes, 1, 6);
//
//        gridPane.add(destinationLabel, 0, 7);
//        gridPane.add(destinationChoices, 1, 7);
//        destinationChoices.setOnAction(e -> System.out.println(destinationChoices.getValue()));
//
//        gridPane.add(destinationDateLabel, 0, 8);
//        gridPane.add(destinationDate, 1, 8);
//
//        gridPane.add(destinationTimeLabel, 0, 9);
//        gridPane.add(destinationTimes, 1, 9);
//
//        gridPane.add(capacityLabel, 0, 10);
//        gridPane.add(capacity1, 1, 10);
//
//        gridPane.add(new Label(), 0, 11);
//        gridPane.add(new Label(), 0, 12);
//
//        Button submit = new Button("Submit");
//        submit.setOnAction(e ->
//        {
//            try
//            {
//                if(apiServiceImpl.insertFlightByAirline(new Flight()))
//                {
//                    stage.close();
//                    AlertBox.DisplayInformation("Flight has successfully added",
//                            "A flight has successfully been added by - for Airline - ");
//                }
//            }
//            catch(Exception ex)
//            {
//
//            }
//        });
//
//        gridPane.add(submit, 1, 13, 1, 1);
//
//        Scene scene = new Scene(gridPane);
//        stage.setScene(scene);
//        stage.showAndWait();
//    }

//    public GridPane populateGrid(String airportHeader, List<Arrival> arrivals)
//    {
//        GridPane gridPane = new GridPane();
//        gridPane.setAlignment(Pos.TOP_CENTER);
//
//        gridPane.setPadding(new Insets(40, 40, 40, 40));
//        gridPane.setHgap(10);
//        gridPane.setVgap(10);
//
//        Label flight = new Label(FieldValue.FLIGHT_CODE);
//        gridPane.add(flight, 0,0);
//        Label airline = new Label(FieldValue.AIRLINE);
//        gridPane.add(airline, 1,0);
//        Label airport = new Label(airportHeader);
//        gridPane.add(airport, 2,0);
//        Label time = new Label(FieldValue.DATE);
//        gridPane.add(time, 3,0);
//        Label status = new Label(FieldValue.STATUS);
//        gridPane.add(status, 4,0);
//
//        int row = 1;
//
//        for(int i = 0; i < arrivals.size(); i++)
//        {
//            gridPane.add(new Label(arrivals.get(i).flightName), 0, row);
//            gridPane.add(new Label(arrivals.get(i).airlineName), 1, row);
//            gridPane.add(new Label(arrivals.get(i).sourceName), 2, row);
//            gridPane.add(new Label(arrivals.get(i).time), 3, row);
//            gridPane.add(new Label(arrivals.get(i).status), 4, row);
//            row++;
//        }
//
//        return gridPane;
//    }